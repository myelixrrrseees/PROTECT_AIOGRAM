from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import os
import asyncio
from data import config
from loader import dp
from utils.db_api import withdraw_commands, quick_commands as commands, google


@dp.callback_query_handler(Text('–ó–∞—è–≤–∫–∏ –æ–ø–ª–∞—Ç—ã'), chat_id=config.admins, state=['*'])
async def get_withdraw(call: CallbackQuery, state: FSMContext):
    withdraw = await withdraw_commands.select_withdraw()
    if withdraw:
        withdraw_id, user_id, amount, photo_name, photo_id, status = withdraw
        pre = amount * 0.67
        gold = float(f"{pre:.2f}")
        await state.update_data(gold=gold)
        user = await commands.select_user(user_id)
        await google.transver_from_withdraw_disc(photo_name, photo_id)
        photo = open("D:/PYTHON/PROTECT_AIOGRAM/" + photo_name, "rb")
        markup = InlineKeyboardMarkup(row_width=1,
                                      inline_keyboard=[
                                          [
                                              InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É',
                                                                   callback_data=f'accept_withdraw{withdraw_id}')
                                          ],
                                          [
                                              InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É',
                                                                   callback_data=f'close_withdraw{withdraw_id}')
                                          ],
                                          [
                                              InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å',
                                                                   callback_data='cancel_withdraw')
                                          ]
                                      ])

        await dp.bot.send_photo(chat_id=call.message.chat.id, photo=photo)
        # photo_message_id = photo_message.message_id
        # print(photo_message_id)
        await call.message.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (@{user[3]} : {withdraw[1]}) —Å–æ–∑–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–ø–ª–∞—Ç—É ‚Ññ{withdraw[0]}\n'
                                  f'–°—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã: {withdraw[2]} - {gold} –≥–æ–ª–¥—ã\n'
                                  f'–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å',
                                  reply_markup=markup)
        path = 'D:/PYTHON/PROTECT_AIOGRAM/' + photo_name
        try:
            os.remove(path)
        except:
            pass
        # await state.update_data(photo_message=photo_message)
        # await dp.bot.delete_message(chat_id=photo_message.chat.id, message_id=photo_message.message_id)
    else:
        await call.message.answer(f'–°–µ–π—á–∞—Å –Ω–µ—Ç—É –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É')
    

@dp.callback_query_handler(Text(startswith=f'accept_withdraw'), chat_id=config.admins)
async def accept_withdraw(call: CallbackQuery, state: FSMContext):
    try:
        await state.reset_state()
        get_id = int(call.data.split('accept_withdraw')[1])
        withdraw = await withdraw_commands.select_withdraw_by_id(get_id)
        withdraw_id, withdraw_user_id, amount, photo_name, photo_id, status = withdraw
        user = await commands.select_user(withdraw_user_id)
        user_user_id, first_name, last_name, username, attempts, referral_id = user
        ikb_screen = InlineKeyboardMarkup(row_width=1,
                                          inline_keyboard=[
                                              [
                                                  InlineKeyboardButton(text="–ü—Ä–∏—Å–ª–∞—Å—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ä—É–∂–∏—è",
                                                                       callback_data=f'screen{withdraw_id}'),
                                              ],
                                          ])
        if withdraw:
            if status == 'created':
                if await withdraw_commands.accept_withdraw(withdraw_id):
                    try:
                        attempt = await commands.select_attempt(user_user_id)
                        number = attempt
                        number += 1
                        await commands.change_attempts(user_user_id, number)
                    except Exception as err:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∞–≤–æ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–∫—Ä–∏–Ω–∞.")
                        print(err)
                    try:
                        await dp.bot.send_message(withdraw_user_id, text=f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É ‚Ññ{withdraw_id} –±—ã–ª–∞ n–æ–¥–æ–±—Ä–µ–Ω–∞ '
                                                                         '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üßë‚Äçüíª\n'
                                                                         f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç\n'
                                                                         "—Å –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –æ—Ä—É–∂–∏–µ–º", reply_markup=ikb_screen)
                    except Exception as err:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
                        print(err)
                    finally:
                        await call.message.edit_text(f'–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É ‚Ññ{withdraw_id} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞')
                else:
                    await withdraw_commands.accept_withdraw(withdraw_id, 'error')
                    await call.message.edit_text(f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É')
            else:
                await call.message.edit_text(f'–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.')
        else:
            await call.message.edit_text(f'–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É —Å —ç—Ç–∏–º –∞–π–¥–∏ –Ω–µ—Ç—É')
    except Exception:
        await call.message.edit_text('–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É')


@dp.callback_query_handler(Text(startswith='close_withdraw'), chat_id=config.admins)
async def accept_withdraw(call: CallbackQuery, state: FSMContext):
    await state.reset_state()
    try:
        get_id = int(call.data.split('close_withdraw')[1])
        withdraw = await withdraw_commands.select_withdraw_by_id(get_id)

        withdraw_id, withdraw_user_id, amount, photo_name, photo_id, status = withdraw

        if withdraw:
            if status == 'created':
                if await withdraw_commands.accept_withdraw(withdraw_id, 'rejected'):
                    try:
                       await dp.bot.send_message(withdraw_user_id, text=f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É ‚Ññ{withdraw[0]} –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
                    except Exception:
                        pass
                    finally:
                        await call.message.edit_text(f'–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É ‚Ññ{withdraw[0]} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
                else:
                    await withdraw_commands.accept_withdraw(withdraw[0], 'error')
                    await call.message.edit_text(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É')
            else:
                await call.message.answer(f'–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.')
        else:
            await call.message.edit_text(f'–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É —Å —ç—Ç–∏–º –∞–π–¥–∏ –Ω–µ—Ç—É')
    except Exception:
        await call.message.edit_text("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É")
