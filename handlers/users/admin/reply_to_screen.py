from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import asyncio
import os
from data import config
from loader import dp
from utils.db_api import screen_commands, quick_commands as commands, google


@dp.callback_query_handler(Text('–°–∫—Ä–∏–Ω—ã —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–∏'), chat_id=config.admins, state=['*'])
async def get_screen(call: CallbackQuery):
    screen = await screen_commands.select_screen()
    if screen:
        screen_id, user_id, gold, photo_name, photo_id, status = screen 
        user = await commands.select_user(user_id)
        try:
            await google.transver_from_withdraw_disc(photo_name, photo_id)
            print("–î–∞–Ω–Ω—ã–π –ø—Ä–∏–Ω—è—Ç—ã")
        except:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –¥–∞–Ω–Ω—ã—Ö")
        try:
            screen_photo = open("D:/PYTHON/PROTECT_AIOGRAM/" + photo_name, "rb")
        except:
            print("–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞")
        markup = InlineKeyboardMarkup(row_width=1,
                                      inline_keyboard=[
                                          [
                                              InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä',
                                                                   callback_data=f'accept_screen{screen_id}')
                                          ],
                                          [
                                              InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å',
                                                                   callback_data='cancel_withdraw')
                                          ]
                                      ])
        await dp.bot.send_photo(chat_id=call.message.chat.id, photo=screen_photo)
        await call.message.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (@{user[3]} : {screen[1]}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–∫—Ä–∏–Ω ‚Ññ{screen_id}\n'
                                  f'–û—Ä—É–∂–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –∑–∞ {gold} –≥–æ–ª–¥—ã\n'
                                  f'–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?',
                                  reply_markup=markup)
        path = 'D:/PYTHON/PROTECT_AIOGRAM/' + photo_name
        try:
            os.remove(path)
        except:
            pass
    else:
        await call.message.answer(f'–°–µ–π—á–∞—Å –Ω–µ—Ç—É —Å–∫—Ä–∏–Ω–æ–≤')


@dp.callback_query_handler(Text(startswith='accept_screen'), chat_id=config.admins)
async def accept_screen(call: CallbackQuery, state: FSMContext):
    await state.reset_state()
    try:
        get_id = int(call.data.split('accept_screen')[1])
        screen = await screen_commands.select_screen_by_id(get_id)
        if screen:
            screen_id, user_id, gold, photo_name, photo_id, status = screen 
            if status == 'created':
                if await screen_commands.accept_screen(screen_id):
                    try:
                        await dp.bot.send_message(user_id, text=f'–í–∞—à —Å–∫—Ä–∏–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üßë‚Äçüíª\n\n'
                                                  '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –≤ –∏–≥—Ä–µ.')
                        await state.reset_state()
                    except Exception:
                        pass
                    finally:
                        await call.message.edit_text(f'–°–∫—Ä–∏–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω')
                        await asyncio.sleep(20)
                        await call.message.delete()
                else:
                    await screen_commands.accept_screen(screen_id, 'error')
                    await call.message.edit_text(f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–∫—Ä–∏–Ω–∞ —Å–∫—Ä–∏–Ω–∞')
            else:
                await call.message.answer(f'–≠—Ç–æ—Ç —Å–∫—Ä–∏–Ω —É–∂–µ –±—ã–ª –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
        else:
            await call.message.edit_text(f'–°–∫—Ä–∏–Ω–∞ —Å —ç—Ç–∏–º –∞–π–¥–∏ –Ω–µ—Ç—É')
    except Exception:
        await call.message.edit_text('–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∫—Ä–∏–Ω–∞')